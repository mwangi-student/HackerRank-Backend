"""correcting migrations

Revision ID: c383a36f1a98
Revises: 
Create Date: 2025-03-03 07:55:15.400235

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'c383a36f1a98'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('tm',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('username', sa.String(length=80), nullable=False),
    sa.Column('email', sa.String(length=120), nullable=False),
    sa.Column('password', sa.String(length=512), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('username')
    )
    op.create_table('token_blocklist',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('jti', sa.String(length=36), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('token_blocklist', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_token_blocklist_jti'), ['jti'], unique=False)

    op.create_table('assessment',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.Column('description', sa.String(length=255), nullable=False),
    sa.Column('difficulty', sa.Text(), nullable=False),
    sa.Column('category', sa.String(length=255), nullable=False),
    sa.Column('assessment_type', sa.String(length=500), nullable=False),
    sa.Column('publish', sa.String(length=500), nullable=False),
    sa.Column('invite_students', sa.String(length=500), nullable=False),
    sa.Column('constraints', sa.Text(), nullable=False),
    sa.Column('time_limit', sa.Integer(), nullable=False),
    sa.Column('tm_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['tm_id'], ['tm.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('students',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('username', sa.String(length=80), nullable=False),
    sa.Column('email', sa.String(length=120), nullable=False),
    sa.Column('password', sa.String(length=512), nullable=False),
    sa.Column('cohort', sa.String(length=255), nullable=True),
    sa.Column('tm_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['tm_id'], ['tm.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('username')
    )
    op.create_table('assessment_invite',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('assessment_id', sa.Integer(), nullable=False),
    sa.Column('student_id', sa.Integer(), nullable=False),
    sa.Column('tm_id', sa.Integer(), nullable=False),
    sa.Column('status', sa.String(length=255), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(), nullable=False),
    sa.Column('completed_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['assessment_id'], ['assessment.id'], ),
    sa.ForeignKeyConstraint(['student_id'], ['students.id'], ),
    sa.ForeignKeyConstraint(['tm_id'], ['tm.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('assessment_submission',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('student_id', sa.Integer(), nullable=False),
    sa.Column('assessment_id', sa.Integer(), nullable=False),
    sa.Column('submitted_at', sa.TIMESTAMP(), nullable=False),
    sa.ForeignKeyConstraint(['assessment_id'], ['assessment.id'], ),
    sa.ForeignKeyConstraint(['student_id'], ['students.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('code_challenge',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('assessment_id', sa.Integer(), nullable=False),
    sa.Column('task', sa.Text(), nullable=False),
    sa.Column('example', sa.Text(), nullable=False),
    sa.Column('input_format', sa.String(length=255), nullable=False),
    sa.Column('output_format', sa.String(length=255), nullable=False),
    sa.Column('constraints', sa.Text(), nullable=False),
    sa.Column('sample_input', sa.String(length=255), nullable=False),
    sa.Column('sample_output', sa.String(length=255), nullable=False),
    sa.ForeignKeyConstraint(['assessment_id'], ['assessment.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('discussions',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('assessment_id', sa.Integer(), nullable=False),
    sa.Column('user_type', sa.String(length=255), nullable=False),
    sa.Column('student_id', sa.Integer(), nullable=True),
    sa.Column('tm_id', sa.Integer(), nullable=True),
    sa.Column('comment', sa.Text(), nullable=False),
    sa.Column('posted_at', sa.TIMESTAMP(), nullable=False),
    sa.ForeignKeyConstraint(['assessment_id'], ['assessment.id'], ),
    sa.ForeignKeyConstraint(['student_id'], ['students.id'], ),
    sa.ForeignKeyConstraint(['tm_id'], ['tm.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('feedback',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('assessment_id', sa.Integer(), nullable=False),
    sa.Column('student_id', sa.Integer(), nullable=False),
    sa.Column('tm_id', sa.Integer(), nullable=False),
    sa.Column('feedback', sa.Text(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(), nullable=False),
    sa.ForeignKeyConstraint(['assessment_id'], ['assessment.id'], ),
    sa.ForeignKeyConstraint(['student_id'], ['students.id'], ),
    sa.ForeignKeyConstraint(['tm_id'], ['tm.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('leaderboard',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('student_id', sa.Integer(), nullable=False),
    sa.Column('assessment_id', sa.Integer(), nullable=False),
    sa.Column('total_score', sa.Integer(), nullable=False),
    sa.Column('rank', sa.Integer(), nullable=False),
    sa.Column('last_updated', sa.TIMESTAMP(), nullable=False),
    sa.ForeignKeyConstraint(['assessment_id'], ['assessment.id'], ),
    sa.ForeignKeyConstraint(['student_id'], ['students.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('questions',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('assessment_id', sa.Integer(), nullable=False),
    sa.Column('question_text', sa.Text(), nullable=False),
    sa.Column('choice_a', sa.String(length=255), nullable=False),
    sa.Column('choice_b', sa.String(length=255), nullable=False),
    sa.Column('choice_c', sa.String(length=255), nullable=False),
    sa.Column('choice_d', sa.String(length=255), nullable=False),
    sa.Column('correct_answer', sa.String(length=1), nullable=False),
    sa.ForeignKeyConstraint(['assessment_id'], ['assessment.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('code_submission',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('submission_id', sa.Integer(), nullable=False),
    sa.Column('codechallenge_id', sa.Integer(), nullable=False),
    sa.Column('selected_answer', sa.String(length=500), nullable=False),
    sa.ForeignKeyConstraint(['codechallenge_id'], ['code_challenge.id'], ),
    sa.ForeignKeyConstraint(['submission_id'], ['assessment_submission.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('mcq_submission',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('submission_id', sa.Integer(), nullable=False),
    sa.Column('question_id', sa.Integer(), nullable=False),
    sa.Column('selected_answer', sa.String(length=1), nullable=False),
    sa.ForeignKeyConstraint(['question_id'], ['questions.id'], ),
    sa.ForeignKeyConstraint(['submission_id'], ['assessment_submission.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('mcq_submission')
    op.drop_table('code_submission')
    op.drop_table('questions')
    op.drop_table('leaderboard')
    op.drop_table('feedback')
    op.drop_table('discussions')
    op.drop_table('code_challenge')
    op.drop_table('assessment_submission')
    op.drop_table('assessment_invite')
    op.drop_table('students')
    op.drop_table('assessment')
    with op.batch_alter_table('token_blocklist', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_token_blocklist_jti'))

    op.drop_table('token_blocklist')
    op.drop_table('tm')
    # ### end Alembic commands ###
